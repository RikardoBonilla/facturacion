[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "facturacion-backend"
description = "Colombian Electronic Invoicing System Backend"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Development Team", email = "dev@facturacion.com"},
]
keywords = ["invoicing", "colombia", "dian", "fastapi", "postgresql"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
    "Topic :: Office/Business :: Financial :: Accounting",
]
dynamic = ["version"]

[tool.setuptools_scm]
write_to = "app/_version.py"

# Black Configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations/versions
)/
'''
skip-string-normalization = false
skip-magic-trailing-comma = false

# Flake8 Configuration (in setup.cfg)
# See setup.cfg for flake8 configuration

# MyPy Configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Paths to check
files = [
    "app",
    "tests",
    "scripts"
]

# Exclude paths
exclude = [
    "migrations/versions/",
    "build/",
    "dist/",
]

# Per-module options
[[tool.mypy.overrides]]
module = [
    "alembic.*",
    "asyncpg.*",
    "passlib.*",
    "jose.*",
    "python_multipart.*",
]
ignore_missing_imports = true

# Test files can be less strict
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

# isort Configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["app", "tests", "scripts"]
known_first_party = ["app"]
known_third_party = [
    "fastapi",
    "sqlalchemy",
    "pydantic",
    "alembic",
    "pytest",
    "httpx",
    "passlib",
    "jose",
    "asyncpg",
    "psycopg2"
]

# Coverage Configuration
[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "app/_version.py"
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Bandit Security Linting
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101"]  # Skip assert_used test

# pytest Configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "auth: Authentication tests",
    "crud: CRUD operation tests",
    "api: API endpoint tests",
    "slow: Slow-running tests",
    "performance: Performance tests",
    "database: Tests requiring database",
    "colombian: Colombian-specific validation tests",
    "error: Error handling tests",
    "memory: Memory usage tests"
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]