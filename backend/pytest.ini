[tool:pytest]
# Pytest configuration for Colombian Electronic Invoicing System

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum version
minversion = 7.0

# Async support
asyncio_mode = auto

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, database required)
    auth: Authentication related tests
    crud: CRUD operation tests
    api: API endpoint tests
    slow: Slow running tests
    database: Tests that require database
    external: Tests that require external services

# Filterwarnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Test environment variables
env =
    TESTING = true
    DATABASE_URL = postgresql://admin:admin123@localhost:5432/facturacion_test
    SECRET_KEY = test-secret-key-for-testing-only
    ACCESS_TOKEN_EXPIRE_MINUTES = 30
    DEBUG = true

# Log configuration for tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Disable cacheprov to avoid issues with async tests
cache_dir = .pytest_cache